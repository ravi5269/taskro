# Generated by Django 4.2.1 on 2023-06-07 17:43

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        blank=True, default=uuid.uuid4, null=True, unique=True
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        db_column="username",
                        db_index=True,
                        max_length=10,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        verbose_name="first name",
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        verbose_name="middle name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        verbose_name="last name",
                    ),
                ),
                (
                    "role_title",
                    models.CharField(
                        choices=[("1", "Role1"), ("2", "Role2")],
                        max_length=100,
                        verbose_name="Role",
                    ),
                ),
                (
                    "dept",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, verbose_name="dept"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        verbose_name="location",
                    ),
                ),
                (
                    "employee_no",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        verbose_name="employee number",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="staff status"),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
